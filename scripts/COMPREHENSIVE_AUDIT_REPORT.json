{
  "timestamp": "2025-10-21T16:05:13.785Z",
  "summary": {
    "total": 134,
    "passed": 40,
    "failed": 72,
    "warnings": 22,
    "healthScore": 30
  },
  "results": [
    {
      "category": "Database Schema",
      "check": "User collection",
      "status": "pass",
      "message": "User collection exists with 15 documents",
      "details": {
        "model": "User",
        "count": 15
      }
    },
    {
      "category": "Database Schema",
      "check": "Account collection",
      "status": "pass",
      "message": "Account collection exists with 2 documents",
      "details": {
        "model": "Account",
        "count": 2
      }
    },
    {
      "category": "Database Schema",
      "check": "Session collection",
      "status": "pass",
      "message": "Session collection exists with 0 documents",
      "details": {
        "model": "Session",
        "count": 0
      }
    },
    {
      "category": "Database Schema",
      "check": "VerificationToken collection",
      "status": "pass",
      "message": "VerificationToken collection exists with 0 documents",
      "details": {
        "model": "VerificationToken",
        "count": 0
      }
    },
    {
      "category": "Database Schema",
      "check": "Listing collection",
      "status": "pass",
      "message": "Listing collection exists with 24 documents",
      "details": {
        "model": "Listing",
        "count": 24
      }
    },
    {
      "category": "Database Schema",
      "check": "BlockedDate collection",
      "status": "pass",
      "message": "BlockedDate collection exists with 0 documents",
      "details": {
        "model": "BlockedDate",
        "count": 0
      }
    },
    {
      "category": "Database Schema",
      "check": "PricingRule collection",
      "status": "pass",
      "message": "PricingRule collection exists with 0 documents",
      "details": {
        "model": "PricingRule",
        "count": 0
      }
    },
    {
      "category": "Database Schema",
      "check": "Amenity collection",
      "status": "pass",
      "message": "Amenity collection exists with 13 documents",
      "details": {
        "model": "Amenity",
        "count": 13
      }
    },
    {
      "category": "Database Schema",
      "check": "NeighborhoodGuide collection",
      "status": "pass",
      "message": "NeighborhoodGuide collection exists with 0 documents",
      "details": {
        "model": "NeighborhoodGuide",
        "count": 0
      }
    },
    {
      "category": "Database Schema",
      "check": "Booking collection",
      "status": "pass",
      "message": "Booking collection exists with 97 documents",
      "details": {
        "model": "Booking",
        "count": 97
      }
    },
    {
      "category": "Database Schema",
      "check": "Payment collection",
      "status": "pass",
      "message": "Payment collection exists with 0 documents",
      "details": {
        "model": "Payment",
        "count": 0
      }
    },
    {
      "category": "Database Schema",
      "check": "PaymentMethod collection",
      "status": "pass",
      "message": "PaymentMethod collection exists with 0 documents",
      "details": {
        "model": "PaymentMethod",
        "count": 0
      }
    },
    {
      "category": "Database Schema",
      "check": "Transaction collection",
      "status": "pass",
      "message": "Transaction collection exists with 0 documents",
      "details": {
        "model": "Transaction",
        "count": 0
      }
    },
    {
      "category": "Database Schema",
      "check": "Review collection",
      "status": "pass",
      "message": "Review collection exists with 96 documents",
      "details": {
        "model": "Review",
        "count": 96
      }
    },
    {
      "category": "Database Schema",
      "check": "Message collection",
      "status": "pass",
      "message": "Message collection exists with 0 documents",
      "details": {
        "model": "Message",
        "count": 0
      }
    },
    {
      "category": "Database Schema",
      "check": "Conversation collection",
      "status": "pass",
      "message": "Conversation collection exists with 0 documents",
      "details": {
        "model": "Conversation",
        "count": 0
      }
    },
    {
      "category": "Database Schema",
      "check": "Notification collection",
      "status": "pass",
      "message": "Notification collection exists with 1 documents",
      "details": {
        "model": "Notification",
        "count": 1
      }
    },
    {
      "category": "Database Schema",
      "check": "Wishlist collection",
      "status": "pass",
      "message": "Wishlist collection exists with 0 documents",
      "details": {
        "model": "Wishlist",
        "count": 0
      }
    },
    {
      "category": "Database Schema",
      "check": "Collection collection",
      "status": "pass",
      "message": "Collection collection exists with 0 documents",
      "details": {
        "model": "Collection",
        "count": 0
      }
    },
    {
      "category": "Database Schema",
      "check": "Quest collection",
      "status": "pass",
      "message": "Quest collection exists with 0 documents",
      "details": {
        "model": "Quest",
        "count": 0
      }
    },
    {
      "category": "Database Schema",
      "check": "UserQuest collection",
      "status": "pass",
      "message": "UserQuest collection exists with 0 documents",
      "details": {
        "model": "UserQuest",
        "count": 0
      }
    },
    {
      "category": "Database Schema",
      "check": "RewardTier collection",
      "status": "pass",
      "message": "RewardTier collection exists with 4 documents",
      "details": {
        "model": "RewardTier",
        "count": 4
      }
    },
    {
      "category": "Database Schema",
      "check": "RewardBadge collection",
      "status": "pass",
      "message": "RewardBadge collection exists with 3 documents",
      "details": {
        "model": "RewardBadge",
        "count": 3
      }
    },
    {
      "category": "Database Schema",
      "check": "UserBadge collection",
      "status": "pass",
      "message": "UserBadge collection exists with 0 documents",
      "details": {
        "model": "UserBadge",
        "count": 0
      }
    },
    {
      "category": "Database Schema",
      "check": "RewardAction collection",
      "status": "pass",
      "message": "RewardAction collection exists with 0 documents",
      "details": {
        "model": "RewardAction",
        "count": 0
      }
    },
    {
      "category": "Database Schema",
      "check": "RewardTransaction collection",
      "status": "pass",
      "message": "RewardTransaction collection exists with 0 documents",
      "details": {
        "model": "RewardTransaction",
        "count": 0
      }
    },
    {
      "category": "Database Schema",
      "check": "RewardCatalogItem collection",
      "status": "pass",
      "message": "RewardCatalogItem collection exists with 0 documents",
      "details": {
        "model": "RewardCatalogItem",
        "count": 0
      }
    },
    {
      "category": "Database Schema",
      "check": "RewardRedemption collection",
      "status": "pass",
      "message": "RewardRedemption collection exists with 0 documents",
      "details": {
        "model": "RewardRedemption",
        "count": 0
      }
    },
    {
      "category": "Database Schema",
      "check": "HostProfile collection",
      "status": "pass",
      "message": "HostProfile collection exists with 6 documents",
      "details": {
        "model": "HostProfile",
        "count": 6
      }
    },
    {
      "category": "Database Schema",
      "check": "TeamMember collection",
      "status": "pass",
      "message": "TeamMember collection exists with 0 documents",
      "details": {
        "model": "TeamMember",
        "count": 0
      }
    },
    {
      "category": "Database Schema",
      "check": "Dispute collection",
      "status": "pass",
      "message": "Dispute collection exists with 0 documents",
      "details": {
        "model": "Dispute",
        "count": 0
      }
    },
    {
      "category": "Database Schema",
      "check": "Promotion collection",
      "status": "pass",
      "message": "Promotion collection exists with 0 documents",
      "details": {
        "model": "Promotion",
        "count": 0
      }
    },
    {
      "category": "Database Schema",
      "check": "AuditLog collection",
      "status": "pass",
      "message": "AuditLog collection exists with 0 documents",
      "details": {
        "model": "AuditLog",
        "count": 0
      }
    },
    {
      "category": "Database Schema",
      "check": "Service collection",
      "status": "pass",
      "message": "Service collection exists with 12 documents",
      "details": {
        "model": "Service",
        "count": 12
      }
    },
    {
      "category": "Database Schema",
      "check": "ServiceBooking collection",
      "status": "pass",
      "message": "ServiceBooking collection exists with 0 documents",
      "details": {
        "model": "ServiceBooking",
        "count": 0
      }
    },
    {
      "category": "Database Schema",
      "check": "Experience collection",
      "status": "pass",
      "message": "Experience collection exists with 12 documents",
      "details": {
        "model": "Experience",
        "count": 12
      }
    },
    {
      "category": "Database Schema",
      "check": "ExperienceBooking collection",
      "status": "pass",
      "message": "ExperienceBooking collection exists with 0 documents",
      "details": {
        "model": "ExperienceBooking",
        "count": 0
      }
    },
    {
      "category": "Database Schema",
      "check": "ExperienceReview collection",
      "status": "pass",
      "message": "ExperienceReview collection exists with 0 documents",
      "details": {
        "model": "ExperienceReview",
        "count": 0
      }
    },
    {
      "category": "Database Schema",
      "check": "Post collection",
      "status": "pass",
      "message": "Post collection exists with 0 documents",
      "details": {
        "model": "Post",
        "count": 0
      }
    },
    {
      "category": "Database Schema",
      "check": "Comment collection",
      "status": "pass",
      "message": "Comment collection exists with 0 documents",
      "details": {
        "model": "Comment",
        "count": 0
      }
    },
    {
      "category": "API Endpoints",
      "check": "Authentication API",
      "status": "fail",
      "message": "Authentication API missing (REQUIRED)",
      "fix": "Create app/api/auth"
    },
    {
      "category": "API Endpoints",
      "check": "User Profile API",
      "status": "fail",
      "message": "User Profile API missing (REQUIRED)",
      "fix": "Create app/api/user/profile/route.ts"
    },
    {
      "category": "API Endpoints",
      "check": "Listings API",
      "status": "fail",
      "message": "Listings API missing (REQUIRED)",
      "fix": "Create app/api/listings/route.ts"
    },
    {
      "category": "API Endpoints",
      "check": "Listing Detail API",
      "status": "fail",
      "message": "Listing Detail API missing (REQUIRED)",
      "fix": "Create app/api/listings/[id]/route.ts"
    },
    {
      "category": "API Endpoints",
      "check": "Bookings API",
      "status": "fail",
      "message": "Bookings API missing (REQUIRED)",
      "fix": "Create app/api/bookings/route.ts"
    },
    {
      "category": "API Endpoints",
      "check": "Booking Detail API",
      "status": "fail",
      "message": "Booking Detail API missing (REQUIRED)",
      "fix": "Create app/api/bookings/[id]/route.ts"
    },
    {
      "category": "API Endpoints",
      "check": "Payments API",
      "status": "fail",
      "message": "Payments API missing (REQUIRED)",
      "fix": "Create app/api/payments/route.ts"
    },
    {
      "category": "API Endpoints",
      "check": "Reviews API",
      "status": "fail",
      "message": "Reviews API missing (REQUIRED)",
      "fix": "Create app/api/reviews/route.ts"
    },
    {
      "category": "API Endpoints",
      "check": "Messages API",
      "status": "fail",
      "message": "Messages API missing (REQUIRED)",
      "fix": "Create app/api/messages/route.ts"
    },
    {
      "category": "API Endpoints",
      "check": "Conversations API",
      "status": "fail",
      "message": "Conversations API missing (REQUIRED)",
      "fix": "Create app/api/conversations/route.ts"
    },
    {
      "category": "API Endpoints",
      "check": "Notifications API",
      "status": "fail",
      "message": "Notifications API missing (REQUIRED)",
      "fix": "Create app/api/notifications/route.ts"
    },
    {
      "category": "API Endpoints",
      "check": "Wishlist API",
      "status": "fail",
      "message": "Wishlist API missing (REQUIRED)",
      "fix": "Create app/api/wishlist/route.ts"
    },
    {
      "category": "API Endpoints",
      "check": "Quests API",
      "status": "fail",
      "message": "Quests API missing (REQUIRED)",
      "fix": "Create app/api/quests/route.ts"
    },
    {
      "category": "API Endpoints",
      "check": "Quest Tracking API",
      "status": "fail",
      "message": "Quest Tracking API missing (REQUIRED)",
      "fix": "Create app/api/quests/track/route.ts"
    },
    {
      "category": "API Endpoints",
      "check": "Reward Tiers API",
      "status": "fail",
      "message": "Reward Tiers API missing (REQUIRED)",
      "fix": "Create app/api/rewards/tiers/route.ts"
    },
    {
      "category": "API Endpoints",
      "check": "Reward Actions API",
      "status": "fail",
      "message": "Reward Actions API missing (REQUIRED)",
      "fix": "Create app/api/rewards/actions/route.ts"
    },
    {
      "category": "API Endpoints",
      "check": "Reward History API",
      "status": "fail",
      "message": "Reward History API missing (REQUIRED)",
      "fix": "Create app/api/rewards/history/route.ts"
    },
    {
      "category": "API Endpoints",
      "check": "Search API",
      "status": "fail",
      "message": "Search API missing (REQUIRED)",
      "fix": "Create app/api/search/route.ts"
    },
    {
      "category": "API Endpoints",
      "check": "Experiences API",
      "status": "warning",
      "message": "Experiences API missing (optional)",
      "details": {
        "path": "app/api/experiences/route.ts"
      }
    },
    {
      "category": "API Endpoints",
      "check": "Services API",
      "status": "warning",
      "message": "Services API missing (optional)",
      "details": {
        "path": "app/api/services/route.ts"
      }
    },
    {
      "category": "API Endpoints",
      "check": "Community API",
      "status": "warning",
      "message": "Community API missing (optional)",
      "details": {
        "path": "app/api/community/route.ts"
      }
    },
    {
      "category": "API Endpoints",
      "check": "Admin APIs",
      "status": "warning",
      "message": "Admin APIs missing (optional)",
      "details": {
        "path": "app/api/admin"
      }
    },
    {
      "category": "API Endpoints",
      "check": "AI APIs",
      "status": "warning",
      "message": "AI APIs missing (optional)",
      "details": {
        "path": "app/api/ai"
      }
    },
    {
      "category": "Frontend Pages",
      "check": "Home Page",
      "status": "fail",
      "message": "Home Page missing (REQUIRED)",
      "fix": "Create app/page.tsx"
    },
    {
      "category": "Frontend Pages",
      "check": "Search Page",
      "status": "fail",
      "message": "Search Page missing (REQUIRED)",
      "fix": "Create app/search/page.tsx"
    },
    {
      "category": "Frontend Pages",
      "check": "Listing Detail Page",
      "status": "fail",
      "message": "Listing Detail Page missing (REQUIRED)",
      "fix": "Create app/listing/[id]/page.tsx"
    },
    {
      "category": "Frontend Pages",
      "check": "Login Page",
      "status": "fail",
      "message": "Login Page missing (REQUIRED)",
      "fix": "Create app/login/page.tsx"
    },
    {
      "category": "Frontend Pages",
      "check": "Register Page",
      "status": "fail",
      "message": "Register Page missing (REQUIRED)",
      "fix": "Create app/register/page.tsx"
    },
    {
      "category": "Frontend Pages",
      "check": "Profile Page",
      "status": "fail",
      "message": "Profile Page missing (REQUIRED)",
      "fix": "Create app/profile/page.tsx"
    },
    {
      "category": "Frontend Pages",
      "check": "Dashboard Page",
      "status": "fail",
      "message": "Dashboard Page missing (REQUIRED)",
      "fix": "Create app/dashboard/page.tsx"
    },
    {
      "category": "Frontend Pages",
      "check": "Trips Page",
      "status": "fail",
      "message": "Trips Page missing (REQUIRED)",
      "fix": "Create app/trips/page.tsx"
    },
    {
      "category": "Frontend Pages",
      "check": "Wishlist Page",
      "status": "fail",
      "message": "Wishlist Page missing (REQUIRED)",
      "fix": "Create app/wishlist/page.tsx"
    },
    {
      "category": "Frontend Pages",
      "check": "Messages Page",
      "status": "fail",
      "message": "Messages Page missing (REQUIRED)",
      "fix": "Create app/messages/page.tsx"
    },
    {
      "category": "Frontend Pages",
      "check": "Booking Page",
      "status": "fail",
      "message": "Booking Page missing (REQUIRED)",
      "fix": "Create app/booking/[id]/page.tsx"
    },
    {
      "category": "Frontend Pages",
      "check": "Rewards Page",
      "status": "fail",
      "message": "Rewards Page missing (REQUIRED)",
      "fix": "Create app/rewards/page.tsx"
    },
    {
      "category": "Frontend Pages",
      "check": "Loyalty Page",
      "status": "warning",
      "message": "Loyalty Page missing (optional)",
      "details": {
        "path": "app/loyalty/page.tsx"
      }
    },
    {
      "category": "Frontend Pages",
      "check": "Host Dashboard",
      "status": "fail",
      "message": "Host Dashboard missing (REQUIRED)",
      "fix": "Create app/host/page.tsx"
    },
    {
      "category": "Frontend Pages",
      "check": "About Page",
      "status": "warning",
      "message": "About Page missing (optional)",
      "details": {
        "path": "app/about/page.tsx"
      }
    },
    {
      "category": "Frontend Pages",
      "check": "Help Page",
      "status": "warning",
      "message": "Help Page missing (optional)",
      "details": {
        "path": "app/help/page.tsx"
      }
    },
    {
      "category": "Frontend Pages",
      "check": "Terms Page",
      "status": "warning",
      "message": "Terms Page missing (optional)",
      "details": {
        "path": "app/terms/page.tsx"
      }
    },
    {
      "category": "Frontend Pages",
      "check": "Privacy Page",
      "status": "warning",
      "message": "Privacy Page missing (optional)",
      "details": {
        "path": "app/privacy/page.tsx"
      }
    },
    {
      "category": "Frontend Pages",
      "check": "Experiences Page",
      "status": "warning",
      "message": "Experiences Page missing (optional)",
      "details": {
        "path": "app/experiences/page.tsx"
      }
    },
    {
      "category": "Frontend Pages",
      "check": "Collections Page",
      "status": "warning",
      "message": "Collections Page missing (optional)",
      "details": {
        "path": "app/collections/page.tsx"
      }
    },
    {
      "category": "Frontend Pages",
      "check": "Community Page",
      "status": "warning",
      "message": "Community Page missing (optional)",
      "details": {
        "path": "app/community/page.tsx"
      }
    },
    {
      "category": "Frontend Pages",
      "check": "Admin Dashboard",
      "status": "warning",
      "message": "Admin Dashboard missing (optional)",
      "details": {
        "path": "app/admin/page.tsx"
      }
    },
    {
      "category": "Core Components",
      "check": "Header/Navbar",
      "status": "fail",
      "message": "Header/Navbar missing (REQUIRED)",
      "fix": "Create components/header.tsx"
    },
    {
      "category": "Core Components",
      "check": "Footer",
      "status": "fail",
      "message": "Footer missing (REQUIRED)",
      "fix": "Create components/footer.tsx"
    },
    {
      "category": "Core Components",
      "check": "Listing Card",
      "status": "fail",
      "message": "Listing Card missing (REQUIRED)",
      "fix": "Create components/listing-card.tsx"
    },
    {
      "category": "Core Components",
      "check": "Listing Grid",
      "status": "fail",
      "message": "Listing Grid missing (REQUIRED)",
      "fix": "Create components/listing-grid.tsx"
    },
    {
      "category": "Core Components",
      "check": "Search Bar",
      "status": "fail",
      "message": "Search Bar missing (REQUIRED)",
      "fix": "Create components/search-bar.tsx"
    },
    {
      "category": "Core Components",
      "check": "Filters",
      "status": "fail",
      "message": "Filters missing (REQUIRED)",
      "fix": "Create components/filters.tsx"
    },
    {
      "category": "Core Components",
      "check": "Booking Widget",
      "status": "fail",
      "message": "Booking Widget missing (REQUIRED)",
      "fix": "Create components/booking-widget.tsx"
    },
    {
      "category": "Core Components",
      "check": "Booking Summary",
      "status": "fail",
      "message": "Booking Summary missing (REQUIRED)",
      "fix": "Create components/booking-summary.tsx"
    },
    {
      "category": "Core Components",
      "check": "Calendar",
      "status": "fail",
      "message": "Calendar missing (REQUIRED)",
      "fix": "Create components/calendar.tsx"
    },
    {
      "category": "Core Components",
      "check": "Review Card",
      "status": "fail",
      "message": "Review Card missing (REQUIRED)",
      "fix": "Create components/review-card.tsx"
    },
    {
      "category": "Core Components",
      "check": "Rating Stars",
      "status": "fail",
      "message": "Rating Stars missing (REQUIRED)",
      "fix": "Create components/rating-stars.tsx"
    },
    {
      "category": "Core Components",
      "check": "User Avatar",
      "status": "fail",
      "message": "User Avatar missing (REQUIRED)",
      "fix": "Create components/user-avatar.tsx"
    },
    {
      "category": "Core Components",
      "check": "User Profile Card",
      "status": "warning",
      "message": "User Profile Card missing (optional)",
      "details": {
        "path": "components/user-profile-card.tsx"
      }
    },
    {
      "category": "Core Components",
      "check": "Auth Modal",
      "status": "fail",
      "message": "Auth Modal missing (REQUIRED)",
      "fix": "Create components/auth-modal.tsx"
    },
    {
      "category": "Core Components",
      "check": "Auth Provider",
      "status": "fail",
      "message": "Auth Provider missing (REQUIRED)",
      "fix": "Create components/auth-provider.tsx"
    },
    {
      "category": "Core Components",
      "check": "Message Thread",
      "status": "fail",
      "message": "Message Thread missing (REQUIRED)",
      "fix": "Create components/message-thread.tsx"
    },
    {
      "category": "Core Components",
      "check": "Conversation List",
      "status": "fail",
      "message": "Conversation List missing (REQUIRED)",
      "fix": "Create components/conversation-list.tsx"
    },
    {
      "category": "Core Components",
      "check": "Quests Panel",
      "status": "fail",
      "message": "Quests Panel missing (REQUIRED)",
      "fix": "Create components/quests-panel.tsx"
    },
    {
      "category": "Core Components",
      "check": "Quest Completion Modal",
      "status": "fail",
      "message": "Quest Completion Modal missing (REQUIRED)",
      "fix": "Create components/quest-completion-modal.tsx"
    },
    {
      "category": "Core Components",
      "check": "Points Notification",
      "status": "fail",
      "message": "Points Notification missing (REQUIRED)",
      "fix": "Create components/points-earned-notification.tsx"
    },
    {
      "category": "Core Components",
      "check": "User Rewards Badge",
      "status": "fail",
      "message": "User Rewards Badge missing (REQUIRED)",
      "fix": "Create components/user-rewards-badge.tsx"
    },
    {
      "category": "Core Components",
      "check": "Daily Check-in",
      "status": "fail",
      "message": "Daily Check-in missing (REQUIRED)",
      "fix": "Create components/daily-check-in.tsx"
    },
    {
      "category": "Core Components",
      "check": "Map Component",
      "status": "fail",
      "message": "Map Component missing (REQUIRED)",
      "fix": "Create components/map.tsx"
    },
    {
      "category": "Core Components",
      "check": "Button",
      "status": "fail",
      "message": "Button missing (REQUIRED)",
      "fix": "Create components/ui/button.tsx"
    },
    {
      "category": "Core Components",
      "check": "Input",
      "status": "fail",
      "message": "Input missing (REQUIRED)",
      "fix": "Create components/ui/input.tsx"
    },
    {
      "category": "Core Components",
      "check": "Modal/Dialog",
      "status": "fail",
      "message": "Modal/Dialog missing (REQUIRED)",
      "fix": "Create components/ui/modal.tsx"
    },
    {
      "category": "Core Components",
      "check": "Toast",
      "status": "fail",
      "message": "Toast missing (REQUIRED)",
      "fix": "Create components/ui/toast.tsx"
    },
    {
      "category": "Library Functions",
      "check": "Quests Library",
      "status": "fail",
      "message": "Quests Library file missing (REQUIRED)",
      "fix": "Create lib/quests.ts"
    },
    {
      "category": "Library Functions",
      "check": "Rewards Library",
      "status": "fail",
      "message": "Rewards Library file missing (REQUIRED)",
      "fix": "Create lib/rewards.ts"
    },
    {
      "category": "Library Functions",
      "check": "Database Library",
      "status": "fail",
      "message": "Database Library file missing (REQUIRED)",
      "fix": "Create lib/db.ts"
    },
    {
      "category": "Library Functions",
      "check": "Auth Library",
      "status": "fail",
      "message": "Auth Library file missing (REQUIRED)",
      "fix": "Create lib/auth.ts"
    },
    {
      "category": "Library Functions",
      "check": "Utils Library",
      "status": "fail",
      "message": "Utils Library file missing (REQUIRED)",
      "fix": "Create lib/utils.ts"
    },
    {
      "category": "Feature Integration",
      "check": "Booking Quest Tracking",
      "status": "warning",
      "message": "Booking flow may not track quest progress",
      "fix": "Add quest tracking to booking completion flow"
    },
    {
      "category": "Feature Integration",
      "check": "Review Quest Tracking",
      "status": "warning",
      "message": "Review submission may not track quest progress",
      "fix": "Add quest tracking to review submission flow"
    },
    {
      "category": "Feature Integration",
      "check": "Auth Integration",
      "status": "fail",
      "message": "Authentication system missing",
      "fix": "Set up NextAuth.js authentication"
    },
    {
      "category": "Feature Integration",
      "check": "Payment Integration",
      "status": "fail",
      "message": "Payment API missing",
      "fix": "Create payment API with Stripe integration"
    },
    {
      "category": "Dependencies",
      "check": "package.json",
      "status": "fail",
      "message": "package.json not found",
      "fix": "Create package.json file"
    },
    {
      "category": "Configuration Files",
      "check": "Next.js Config",
      "status": "fail",
      "message": "Next.js Config missing (REQUIRED)",
      "fix": "Create next.config.mjs"
    },
    {
      "category": "Configuration Files",
      "check": "TypeScript Config",
      "status": "fail",
      "message": "TypeScript Config missing (REQUIRED)",
      "fix": "Create tsconfig.json"
    },
    {
      "category": "Configuration Files",
      "check": "Tailwind Config",
      "status": "fail",
      "message": "Tailwind Config missing (REQUIRED)",
      "fix": "Create tailwind.config.ts"
    },
    {
      "category": "Configuration Files",
      "check": "PostCSS Config",
      "status": "fail",
      "message": "PostCSS Config missing (REQUIRED)",
      "fix": "Create postcss.config.mjs"
    },
    {
      "category": "Configuration Files",
      "check": "Prisma Schema",
      "status": "fail",
      "message": "Prisma Schema missing (REQUIRED)",
      "fix": "Create prisma/schema.prisma"
    },
    {
      "category": "Configuration Files",
      "check": "Environment Variables",
      "status": "fail",
      "message": "Environment Variables missing (REQUIRED)",
      "fix": "Create .env"
    },
    {
      "category": "Configuration Files",
      "check": "Local Environment Variables",
      "status": "warning",
      "message": "Local Environment Variables missing (optional)",
      "details": {
        "path": ".env.local"
      }
    },
    {
      "category": "Configuration Files",
      "check": "ESLint Config",
      "status": "warning",
      "message": "ESLint Config missing (optional)",
      "details": {
        "path": ".eslintrc.json"
      }
    },
    {
      "category": "Configuration Files",
      "check": "Prettier Config",
      "status": "warning",
      "message": "Prettier Config missing (optional)",
      "details": {
        "path": ".prettierrc"
      }
    },
    {
      "category": "Environment Variables",
      "check": "Environment Files",
      "status": "fail",
      "message": "No .env or .env.local file found",
      "fix": "Create .env.local file with required environment variables"
    },
    {
      "category": "Type Safety",
      "check": "Types Directory",
      "status": "warning",
      "message": "Types directory missing",
      "fix": "Create types/ directory for TypeScript type definitions"
    },
    {
      "category": "Type Safety",
      "check": "Prisma Client Types",
      "status": "warning",
      "message": "Prisma client types not generated",
      "fix": "Run: npx prisma generate"
    }
  ],
  "fixes": [
    "Create app/api/auth",
    "Create app/api/user/profile/route.ts",
    "Create app/api/listings/route.ts",
    "Create app/api/listings/[id]/route.ts",
    "Create app/api/bookings/route.ts",
    "Create app/api/bookings/[id]/route.ts",
    "Create app/api/payments/route.ts",
    "Create app/api/reviews/route.ts",
    "Create app/api/messages/route.ts",
    "Create app/api/conversations/route.ts",
    "Create app/api/notifications/route.ts",
    "Create app/api/wishlist/route.ts",
    "Create app/api/quests/route.ts",
    "Create app/api/quests/track/route.ts",
    "Create app/api/rewards/tiers/route.ts",
    "Create app/api/rewards/actions/route.ts",
    "Create app/api/rewards/history/route.ts",
    "Create app/api/search/route.ts",
    "Create app/page.tsx",
    "Create app/search/page.tsx",
    "Create app/listing/[id]/page.tsx",
    "Create app/login/page.tsx",
    "Create app/register/page.tsx",
    "Create app/profile/page.tsx",
    "Create app/dashboard/page.tsx",
    "Create app/trips/page.tsx",
    "Create app/wishlist/page.tsx",
    "Create app/messages/page.tsx",
    "Create app/booking/[id]/page.tsx",
    "Create app/rewards/page.tsx",
    "Create app/host/page.tsx",
    "Create components/header.tsx",
    "Create components/footer.tsx",
    "Create components/listing-card.tsx",
    "Create components/listing-grid.tsx",
    "Create components/search-bar.tsx",
    "Create components/filters.tsx",
    "Create components/booking-widget.tsx",
    "Create components/booking-summary.tsx",
    "Create components/calendar.tsx",
    "Create components/review-card.tsx",
    "Create components/rating-stars.tsx",
    "Create components/user-avatar.tsx",
    "Create components/auth-modal.tsx",
    "Create components/auth-provider.tsx",
    "Create components/message-thread.tsx",
    "Create components/conversation-list.tsx",
    "Create components/quests-panel.tsx",
    "Create components/quest-completion-modal.tsx",
    "Create components/points-earned-notification.tsx",
    "Create components/user-rewards-badge.tsx",
    "Create components/daily-check-in.tsx",
    "Create components/map.tsx",
    "Create components/ui/button.tsx",
    "Create components/ui/input.tsx",
    "Create components/ui/modal.tsx",
    "Create components/ui/toast.tsx",
    "Create lib/quests.ts",
    "Create lib/rewards.ts",
    "Create lib/db.ts",
    "Create lib/auth.ts",
    "Create lib/utils.ts",
    "Add quest tracking to booking completion flow",
    "Add quest tracking to review submission flow",
    "Set up NextAuth.js authentication",
    "Create payment API with Stripe integration",
    "Create package.json file",
    "Create next.config.mjs",
    "Create tsconfig.json",
    "Create tailwind.config.ts",
    "Create postcss.config.mjs",
    "Create prisma/schema.prisma",
    "Create .env",
    "Create .env.local file with required environment variables",
    "Create types/ directory for TypeScript type definitions",
    "Run: npx prisma generate"
  ]
}