"use client"

import { useState } from "react"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Bell, MessageSquare, Calendar, Star, DollarSign, Clock } from "lucide-react"
import { toast } from "sonner"

export default function NotificationDemoPage() {
  const [notificationCount, setNotificationCount] = useState(0)

  const simulateNotification = (type: string) => {
    setNotificationCount((prev) => prev + 1)

    const notifications = {
      booking: {
        title: "ƒê·∫∑t ph√≤ng m·ªõi",
        description: "B·∫°n c√≥ booking m·ªõi t·∫°i Villa ƒê√† L·∫°t",
        icon: "üè†",
      },
      message: {
        title: "Tin nh·∫Øn m·ªõi",
        description: "Nguy·ªÖn VƒÉn A ƒë√£ g·ª≠i tin nh·∫Øn cho b·∫°n",
        icon: "üí¨",
      },
      review: {
        title: "ƒê√°nh gi√° m·ªõi",
        description: "B·∫°n nh·∫≠n ƒë∆∞·ª£c ƒë√°nh gi√° 5‚≠ê t·ª´ kh√°ch",
        icon: "‚≠ê",
      },
      payment: {
        title: "Thanh to√°n th√†nh c√¥ng",
        description: "B·∫°n ƒë√£ nh·∫≠n ƒë∆∞·ª£c thanh to√°n ‚Ç´2,500,000",
        icon: "üí∞",
      },
      price_drop: {
        title: "Gi·∫£m gi√°",
        description: "Villa Nha Trang v·ª´a gi·∫£m 20%",
        icon: "üí∏",
      },
      reminder: {
        title: "Nh·∫Øc nh·ªü",
        description: "Check-in c√≤n 2 ng√†y n·ªØa",
        icon: "‚è∞",
      },
    }

    const notification = notifications[type as keyof typeof notifications] || notifications.booking

    toast.success(notification.title, {
      description: notification.description,
      icon: notification.icon,
      action: {
        label: "Xem",
        onClick: () => {
          console.log("View notification")
        },
      },
    })

    // Play notification sound
    try {
      const audio = new Audio("/notification.mp3")
      audio.volume = 0.5
      audio.play().catch(() => {
        console.log("Autoplay blocked")
      })
    } catch (error) {
      console.log("Audio error")
    }
  }

  return (
    <div className="container max-w-4xl py-12">
      <div className="mb-8">
        <h1 className="text-3xl font-bold mb-2">Demo Th√¥ng B√°o Real-time</h1>
        <p className="text-muted-foreground">
          Test h·ªá th·ªëng th√¥ng b√°o v·ªõi toast, badge, v√† favicon notification
        </p>
      </div>

      <Card className="mb-6">
        <CardHeader>
          <CardTitle>Tr·∫°ng th√°i</CardTitle>
          <CardDescription>Th√¥ng tin v·ªÅ h·ªá th·ªëng th√¥ng b√°o</CardDescription>
        </CardHeader>
        <CardContent className="space-y-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center gap-2">
              <div className="h-3 w-3 bg-green-500 rounded-full animate-pulse" />
              <span className="text-sm font-medium">Tr·∫°ng th√°i:</span>
            </div>
            <span className="text-sm text-muted-foreground">Tr·ª±c tuy·∫øn</span>
          </div>
          <div className="flex items-center justify-between">
            <span className="text-sm font-medium">S·ªë th√¥ng b√°o ƒë√£ g·ª≠i:</span>
            <span className="text-sm text-muted-foreground">{notificationCount}</span>
          </div>
          <div className="flex items-center justify-between">
            <span className="text-sm font-medium">Icon th√¥ng b√°o:</span>
            <span className="text-sm text-muted-foreground">
              Nh·∫•n v√†o icon <Bell className="inline h-4 w-4" /> tr√™n header ƒë·ªÉ xem
            </span>
          </div>
          <div className="flex items-center justify-between">
            <span className="text-sm font-medium">Favicon badge:</span>
            <span className="text-sm text-muted-foreground">
              Ki·ªÉm tra tab browser (chuy·ªÉn sang tab kh√°c r·ªìi quay l·∫°i)
            </span>
          </div>
        </CardContent>
      </Card>

      <Card>
        <CardHeader>
          <CardTitle>T·∫°o Th√¥ng B√°o Test</CardTitle>
          <CardDescription>Click v√†o c√°c n√∫t ƒë·ªÉ t·∫°o th√¥ng b√°o m·∫´u</CardDescription>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-1 sm:grid-cols-2 gap-3">
            <Button
              onClick={() => simulateNotification("booking")}
              variant="outline"
              className="justify-start"
            >
              <Calendar className="h-4 w-4 mr-2" />
              ƒê·∫∑t ph√≤ng m·ªõi
            </Button>
            <Button
              onClick={() => simulateNotification("message")}
              variant="outline"
              className="justify-start"
            >
              <MessageSquare className="h-4 w-4 mr-2" />
              Tin nh·∫Øn m·ªõi
            </Button>
            <Button
              onClick={() => simulateNotification("review")}
              variant="outline"
              className="justify-start"
            >
              <Star className="h-4 w-4 mr-2" />
              ƒê√°nh gi√° m·ªõi
            </Button>
            <Button
              onClick={() => simulateNotification("payment")}
              variant="outline"
              className="justify-start"
            >
              <DollarSign className="h-4 w-4 mr-2" />
              Thanh to√°n th√†nh c√¥ng
            </Button>
            <Button
              onClick={() => simulateNotification("price_drop")}
              variant="outline"
              className="justify-start"
            >
              <DollarSign className="h-4 w-4 mr-2" />
              Gi·∫£m gi√°
            </Button>
            <Button
              onClick={() => simulateNotification("reminder")}
              variant="outline"
              className="justify-start"
            >
              <Clock className="h-4 w-4 mr-2" />
              Nh·∫Øc nh·ªü
            </Button>
          </div>
        </CardContent>
      </Card>

      <div className="mt-6 p-4 bg-muted rounded-lg">
        <h3 className="font-semibold mb-2">T√≠nh nƒÉng Real-time:</h3>
        <ul className="space-y-2 text-sm text-muted-foreground">
          <li className="flex items-start gap-2">
            <span className="text-primary">‚úì</span>
            <span>Toast notification hi·ªÉn th·ªã ngay khi c√≥ th√¥ng b√°o m·ªõi</span>
          </li>
          <li className="flex items-start gap-2">
            <span className="text-primary">‚úì</span>
            <span>Badge ƒë·ªè tr√™n icon Bell hi·ªÉn th·ªã s·ªë th√¥ng b√°o ch∆∞a ƒë·ªçc</span>
          </li>
          <li className="flex items-start gap-2">
            <span className="text-primary">‚úì</span>
            <span>Favicon badge tr√™n tab browser (khi ·ªü tab kh√°c)</span>
          </li>
          <li className="flex items-start gap-2">
            <span className="text-primary">‚úì</span>
            <span>√Çm thanh th√¥ng b√°o (n·∫øu c√≥ file notification.mp3)</span>
          </li>
          <li className="flex items-start gap-2">
            <span className="text-primary">‚úì</span>
            <span>Polling m·ªói 10 gi√¢y ƒë·ªÉ check th√¥ng b√°o m·ªõi</span>
          </li>
          <li className="flex items-start gap-2">
            <span className="text-primary">‚úì</span>
            <span>ƒê√°nh d·∫•u ƒë√£ ƒë·ªçc v√† x√≥a th√¥ng b√°o</span>
          </li>
        </ul>
      </div>
    </div>
  )
}
