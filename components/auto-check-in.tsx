"use client"

import { useState } from "react"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { Textarea } from "@/components/ui/textarea"
import { Badge } from "@/components/ui/badge"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"
import { Switch } from "@/components/ui/switch"
import { KeyRound, MapPin, Wifi, Car, Phone, Home, Clock, Info, Copy, Eye, Edit2, Save } from "lucide-react"

interface CheckInInfo {
  arrivalTime: string
  address: string
  gpsCoordinates: string
  parkingInstructions: string
  accessMethod: "key" | "code" | "lockbox" | "host_greeting"
  doorCode?: string
  lockboxLocation?: string
  lockboxCode?: string
  hostPhone: string
  wifiName: string
  wifiPassword: string
  roomNumber?: string
  specialInstructions: string
}

export function AutoCheckIn() {
  const [checkInInfo, setCheckInInfo] = useState<CheckInInfo>({
    arrivalTime: "14:00",
    address: "123 ƒê∆∞·ªùng Tr·∫ßn Ph√∫, Ph∆∞·ªùng 5, Qu·∫≠n 1, TP.HCM",
    gpsCoordinates: "10.7769, 106.7009",
    parkingInstructions: "ƒê·ªó xe trong s√¢n, b√™n tr√°i c·ª≠a ch√≠nh. C√≥ 2 ch·ªó ƒë·ªó xe h∆°i v√† kh√¥ng gi·ªõi h·∫°n xe m√°y.",
    accessMethod: "code",
    doorCode: "1234#",
    hostPhone: "0901 234 567",
    wifiName: "Villa_Guest_2024",
    wifiPassword: "Welcome@2024",
    roomNumber: "301",
    specialInstructions: "Vui l√≤ng g·ªçi ƒëi·ªán tr∆∞·ªõc 30 ph√∫t n·∫øu ƒë·∫øn s·ªõm ho·∫∑c mu·ªôn. Kh√≥a c·ª≠a khi ra ngo√†i."
  })

  const [autoSendEnabled, setAutoSendEnabled] = useState(true)
  const [sendTiming, setSendTiming] = useState("2h_before")

  const handleCopyInstructions = () => {
    const instructions = generateInstructions()
    navigator.clipboard.writeText(instructions)
  }

  const generateInstructions = () => {
    return `üè† H∆Ø·ªöNG D·∫™N CHECK-IN T·ª∞ ƒê·ªòNG

üìç ƒê·ªäA CH·ªà:
${checkInInfo.address}
GPS: ${checkInInfo.gpsCoordinates}
üîó Google Maps: https://maps.google.com/?q=${checkInInfo.gpsCoordinates}

‚è∞ GI·ªú CHECK-IN:
${checkInInfo.arrivalTime}

üÖøÔ∏è ƒê·ªñ XE:
${checkInInfo.parkingInstructions}

üîë C√ÅCH V√ÄO NH√Ä:
${checkInInfo.accessMethod === "code" ? `M·∫≠t kh·∫©u c·ª≠a ch√≠nh: ${checkInInfo.doorCode}` : 
  checkInInfo.accessMethod === "lockbox" ? `H·ªôp kh√≥a t·∫°i: ${checkInInfo.lockboxLocation}\nM√£ s·ªë: ${checkInInfo.lockboxCode}` :
  checkInInfo.accessMethod === "key" ? "Nh·∫≠n ch√¨a kh√≥a t·ª´ ch·ªß nh√†" :
  "Ch·ªß nh√† s·∫Ω tr·ª±c ti·∫øp ƒë√≥n b·∫°n"}
${checkInInfo.roomNumber ? `Ph√≤ng s·ªë: ${checkInInfo.roomNumber}` : ''}

üì∂ WIFI:
T√™n m·∫°ng: ${checkInInfo.wifiName}
M·∫≠t kh·∫©u: ${checkInInfo.wifiPassword}

üìû LI√äN H·ªÜ KH·∫®N C·∫§P:
${checkInInfo.hostPhone}

üí° L∆ØU √ù:
${checkInInfo.specialInstructions}

Ch√∫c b·∫°n c√≥ k·ª≥ ngh·ªâ tuy·ªát v·ªùi! üåü`
  }

  return (
    <div className="space-y-6">
      {/* Header */}
      <div>
        <h2 className="text-2xl font-bold">H∆∞·ªõng d·∫´n check-in t·ª± ƒë·ªông</h2>
        <p className="text-muted-foreground">T·∫°o v√† g·ª≠i h∆∞·ªõng d·∫´n check-in t·ª± ƒë·ªông cho kh√°ch</p>
      </div>

      {/* Quick Stats */}
      <div className="grid gap-4 md:grid-cols-4">
        <Card>
          <CardHeader className="flex flex-row items-center justify-between pb-2">
            <CardTitle className="text-sm font-medium">Check-in th√†nh c√¥ng</CardTitle>
            <KeyRound className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">98%</div>
            <p className="text-xs text-muted-foreground">Kh√¥ng c·∫ßn h·ªó tr·ª£</p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between pb-2">
            <CardTitle className="text-sm font-medium">Th·ªùi gian ti·∫øt ki·ªám</CardTitle>
            <Clock className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">6h</div>
            <p className="text-xs text-muted-foreground">M·ªói tu·∫ßn</p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between pb-2">
            <CardTitle className="text-sm font-medium">ƒê√£ g·ª≠i</CardTitle>
            <Home className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">127</div>
            <p className="text-xs text-muted-foreground">H∆∞·ªõng d·∫´n th√°ng n√†y</p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between pb-2">
            <CardTitle className="text-sm font-medium">ƒê√°nh gi√°</CardTitle>
            <Info className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">4.9</div>
            <p className="text-xs text-muted-foreground">ƒê·ªô r√µ r√†ng</p>
          </CardContent>
        </Card>
      </div>

      <Tabs defaultValue="setup" className="space-y-6">
        <TabsList className="grid w-full grid-cols-3">
          <TabsTrigger value="setup">Thi·∫øt l·∫≠p</TabsTrigger>
          <TabsTrigger value="preview">Xem tr∆∞·ªõc</TabsTrigger>
          <TabsTrigger value="settings">C√†i ƒë·∫∑t</TabsTrigger>
        </TabsList>

        {/* Setup Tab */}
        <TabsContent value="setup" className="space-y-6">
          <Card>
            <CardHeader>
              <CardTitle>Th√¥ng tin c∆° b·∫£n</CardTitle>
              <CardDescription>Cung c·∫•p th√¥ng tin check-in cho kh√°ch</CardDescription>
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="grid gap-4 md:grid-cols-2">
                <div className="space-y-2">
                  <Label htmlFor="arrival">
                    <Clock className="h-4 w-4 inline mr-2" />
                    Gi·ªù check-in
                  </Label>
                  <Input
                    id="arrival"
                    type="time"
                    value={checkInInfo.arrivalTime}
                    onChange={(e) => setCheckInInfo({...checkInInfo, arrivalTime: e.target.value})}
                  />
                </div>

                <div className="space-y-2">
                  <Label htmlFor="phone">
                    <Phone className="h-4 w-4 inline mr-2" />
                    S·ªë ƒëi·ªán tho·∫°i li√™n h·ªá
                  </Label>
                  <Input
                    id="phone"
                    value={checkInInfo.hostPhone}
                    onChange={(e) => setCheckInInfo({...checkInInfo, hostPhone: e.target.value})}
                  />
                </div>
              </div>

              <div className="space-y-2">
                <Label htmlFor="address">
                  <MapPin className="h-4 w-4 inline mr-2" />
                  ƒê·ªãa ch·ªâ ƒë·∫ßy ƒë·ªß
                </Label>
                <Input
                  id="address"
                  value={checkInInfo.address}
                  onChange={(e) => setCheckInInfo({...checkInInfo, address: e.target.value})}
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="gps">
                  T·ªça ƒë·ªô GPS
                </Label>
                <Input
                  id="gps"
                  placeholder="10.7769, 106.7009"
                  value={checkInInfo.gpsCoordinates}
                  onChange={(e) => setCheckInInfo({...checkInInfo, gpsCoordinates: e.target.value})}
                />
                <p className="text-xs text-muted-foreground">
                  T√¨m tr√™n Google Maps ‚Üí Click chu·ªôt ph·∫£i ‚Üí Sao ch√©p t·ªça ƒë·ªô
                </p>
              </div>

              <div className="space-y-2">
                <Label htmlFor="parking">
                  <Car className="h-4 w-4 inline mr-2" />
                  H∆∞·ªõng d·∫´n ƒë·ªó xe
                </Label>
                <Textarea
                  id="parking"
                  rows={3}
                  value={checkInInfo.parkingInstructions}
                  onChange={(e) => setCheckInInfo({...checkInInfo, parkingInstructions: e.target.value})}
                />
              </div>
            </CardContent>
          </Card>

          <Card>
            <CardHeader>
              <CardTitle>Ph∆∞∆°ng th·ª©c v√†o nh√†</CardTitle>
              <CardDescription>Ch·ªçn c√°ch kh√°ch s·∫Ω v√†o nh√†</CardDescription>
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="space-y-2">
                <Label>
                  <KeyRound className="h-4 w-4 inline mr-2" />
                  Lo·∫°i kh√≥a
                </Label>
                <Select 
                  value={checkInInfo.accessMethod}
                  onValueChange={(value: any) => setCheckInInfo({...checkInInfo, accessMethod: value})}
                >
                  <SelectTrigger>
                    <SelectValue />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="code">Kh√≥a ƒëi·ªán t·ª≠ (m√£ s·ªë)</SelectItem>
                    <SelectItem value="lockbox">H·ªôp kh√≥a (lockbox)</SelectItem>
                    <SelectItem value="key">Ch√¨a kh√≥a truy·ªÅn th·ªëng</SelectItem>
                    <SelectItem value="host_greeting">Ch·ªß nh√† tr·ª±c ti·∫øp ƒë√≥n</SelectItem>
                  </SelectContent>
                </Select>
              </div>

              {checkInInfo.accessMethod === "code" && (
                <div className="space-y-2">
                  <Label htmlFor="doorCode">M·∫≠t kh·∫©u c·ª≠a</Label>
                  <Input
                    id="doorCode"
                    value={checkInInfo.doorCode}
                    onChange={(e) => setCheckInInfo({...checkInInfo, doorCode: e.target.value})}
                    placeholder="1234#"
                  />
                  <p className="text-xs text-muted-foreground">
                    ƒê·ª´ng qu√™n d·∫•u # n·∫øu kh√≥a y√™u c·∫ßu
                  </p>
                </div>
              )}

              {checkInInfo.accessMethod === "lockbox" && (
                <>
                  <div className="space-y-2">
                    <Label htmlFor="lockboxLocation">V·ªã tr√≠ h·ªôp kh√≥a</Label>
                    <Input
                      id="lockboxLocation"
                      value={checkInInfo.lockboxLocation}
                      onChange={(e) => setCheckInInfo({...checkInInfo, lockboxLocation: e.target.value})}
                      placeholder="B√™n c·∫°nh c·ª≠a ch√≠nh, ph√≠a tr√°i"
                    />
                  </div>
                  <div className="space-y-2">
                    <Label htmlFor="lockboxCode">M√£ s·ªë h·ªôp kh√≥a</Label>
                    <Input
                      id="lockboxCode"
                      value={checkInInfo.lockboxCode}
                      onChange={(e) => setCheckInInfo({...checkInInfo, lockboxCode: e.target.value})}
                      placeholder="5678"
                    />
                  </div>
                </>
              )}

              <div className="space-y-2">
                <Label htmlFor="roomNumber">S·ªë ph√≤ng (n·∫øu c√≥)</Label>
                <Input
                  id="roomNumber"
                  value={checkInInfo.roomNumber}
                  onChange={(e) => setCheckInInfo({...checkInInfo, roomNumber: e.target.value})}
                  placeholder="301"
                />
              </div>
            </CardContent>
          </Card>

          <Card>
            <CardHeader>
              <CardTitle>WiFi</CardTitle>
              <CardDescription>Th√¥ng tin k·∫øt n·ªëi internet</CardDescription>
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="grid gap-4 md:grid-cols-2">
                <div className="space-y-2">
                  <Label htmlFor="wifiName">
                    <Wifi className="h-4 w-4 inline mr-2" />
                    T√™n m·∫°ng WiFi
                  </Label>
                  <Input
                    id="wifiName"
                    value={checkInInfo.wifiName}
                    onChange={(e) => setCheckInInfo({...checkInInfo, wifiName: e.target.value})}
                  />
                </div>

                <div className="space-y-2">
                  <Label htmlFor="wifiPassword">M·∫≠t kh·∫©u WiFi</Label>
                  <Input
                    id="wifiPassword"
                    value={checkInInfo.wifiPassword}
                    onChange={(e) => setCheckInInfo({...checkInInfo, wifiPassword: e.target.value})}
                  />
                </div>
              </div>
            </CardContent>
          </Card>

          <Card>
            <CardHeader>
              <CardTitle>L∆∞u √Ω ƒë·∫∑c bi·ªát</CardTitle>
              <CardDescription>Th√¥ng tin b·ªï sung cho kh√°ch</CardDescription>
            </CardHeader>
            <CardContent>
              <Textarea
                rows={4}
                value={checkInInfo.specialInstructions}
                onChange={(e) => setCheckInInfo({...checkInInfo, specialInstructions: e.target.value})}
                placeholder="VD: Vui l√≤ng g·ªçi ƒëi·ªán tr∆∞·ªõc 30 ph√∫t. Kh√≥a c·ª≠a khi ra ngo√†i..."
              />
            </CardContent>
          </Card>

          <div className="flex gap-2">
            <Button className="flex-1" onClick={() => {}}>
              <Save className="h-4 w-4 mr-2" />
              L∆∞u th√¥ng tin
            </Button>
            <Button variant="outline" onClick={handleCopyInstructions}>
              <Copy className="h-4 w-4 mr-2" />
              Sao ch√©p
            </Button>
          </div>
        </TabsContent>

        {/* Preview Tab */}
        <TabsContent value="preview">
          <Card>
            <CardHeader>
              <div className="flex items-center justify-between">
                <div>
                  <CardTitle>Xem tr∆∞·ªõc h∆∞·ªõng d·∫´n</CardTitle>
                  <CardDescription>ƒê√¢y l√† nh·ªØng g√¨ kh√°ch s·∫Ω nh·∫≠n ƒë∆∞·ª£c</CardDescription>
                </div>
                <Button variant="outline" onClick={handleCopyInstructions}>
                  <Copy className="h-4 w-4 mr-2" />
                  Sao ch√©p
                </Button>
              </div>
            </CardHeader>
            <CardContent>
              <div className="bg-muted p-6 rounded-lg">
                <pre className="whitespace-pre-wrap font-sans text-sm leading-relaxed">
                  {generateInstructions()}
                </pre>
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        {/* Settings Tab */}
        <TabsContent value="settings" className="space-y-6">
          <Card>
            <CardHeader>
              <CardTitle>G·ª≠i t·ª± ƒë·ªông</CardTitle>
              <CardDescription>C·∫•u h√¨nh khi n√†o g·ª≠i h∆∞·ªõng d·∫´n check-in</CardDescription>
            </CardHeader>
            <CardContent className="space-y-6">
              <div className="flex items-center justify-between">
                <div className="space-y-0.5">
                  <Label>K√≠ch ho·∫°t g·ª≠i t·ª± ƒë·ªông</Label>
                  <p className="text-sm text-muted-foreground">
                    T·ª± ƒë·ªông g·ª≠i h∆∞·ªõng d·∫´n check-in cho m·ªçi ƒë·∫∑t ph√≤ng
                  </p>
                </div>
                <Switch
                  checked={autoSendEnabled}
                  onCheckedChange={setAutoSendEnabled}
                />
              </div>

              {autoSendEnabled && (
                <div className="space-y-2">
                  <Label>Th·ªùi ƒëi·ªÉm g·ª≠i</Label>
                  <Select value={sendTiming} onValueChange={setSendTiming}>
                    <SelectTrigger>
                      <SelectValue />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="booking">Ngay sau khi ƒë·∫∑t ph√≤ng</SelectItem>
                      <SelectItem value="24h_before">24 gi·ªù tr∆∞·ªõc check-in</SelectItem>
                      <SelectItem value="2h_before">2 gi·ªù tr∆∞·ªõc check-in</SelectItem>
                      <SelectItem value="1h_before">1 gi·ªù tr∆∞·ªõc check-in</SelectItem>
                      <SelectItem value="checkin_time">ƒê√∫ng gi·ªù check-in</SelectItem>
                    </SelectContent>
                  </Select>
                </div>
              )}

              <div className="flex items-center justify-between">
                <div className="space-y-0.5">
                  <Label>G·ª≠i qua SMS</Label>
                  <p className="text-sm text-muted-foreground">
                    G·ª≠i th√™m b·∫£n tin nh·∫Øn SMS (c√≥ ph√≠)
                  </p>
                </div>
                <Switch />
              </div>

              <div className="flex items-center justify-between">
                <div className="space-y-0.5">
                  <Label>G·ª≠i qua email</Label>
                  <p className="text-sm text-muted-foreground">
                    G·ª≠i email c√≥ ƒë·ªãnh d·∫°ng ƒë·∫πp h∆°n
                  </p>
                </div>
                <Switch defaultChecked />
              </div>

              <div className="flex items-center justify-between">
                <div className="space-y-0.5">
                  <Label>T·∫°o QR code</Label>
                  <p className="text-sm text-muted-foreground">
                    T·∫°o m√£ QR ch·ª©a th√¥ng tin check-in
                  </p>
                </div>
                <Switch defaultChecked />
              </div>
            </CardContent>
          </Card>

          <Card>
            <CardHeader>
              <CardTitle>Th√¥ng b√°o cho ch·ªß nh√†</CardTitle>
              <CardDescription>Nh·∫≠n c·∫≠p nh·∫≠t v·ªÅ check-in</CardDescription>
            </CardHeader>
            <CardContent className="space-y-6">
              <div className="flex items-center justify-between">
                <div className="space-y-0.5">
                  <Label>Th√¥ng b√°o khi kh√°ch check-in</Label>
                  <p className="text-sm text-muted-foreground">
                    Nh·∫≠n th√¥ng b√°o khi kh√°ch ƒë·∫øn v√† s·ª≠ d·ª•ng m√£
                  </p>
                </div>
                <Switch defaultChecked />
              </div>

              <div className="flex items-center justify-between">
                <div className="space-y-0.5">
                  <Label>Th√¥ng b√°o khi h∆∞·ªõng d·∫´n ƒë∆∞·ª£c ƒë·ªçc</Label>
                  <p className="text-sm text-muted-foreground">
                    Bi·∫øt khi kh√°ch ƒë√£ xem h∆∞·ªõng d·∫´n check-in
                  </p>
                </div>
                <Switch />
              </div>
            </CardContent>
          </Card>
        </TabsContent>
      </Tabs>
    </div>
  )
}
